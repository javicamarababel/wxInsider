<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_subtype">unknown</value>
  <value name="node_nsName">wx.insider.services.impl</value>
  <value name="is_public">false</value>
  <value name="shared">c3RhdGljIGZpbmFsIGludCBNQVhfUkVDX0RFUFRIPTEwOwoKc3RhdGljIGNsYXNzIFNlcnZpY2VE
dW1wZXIgewoJRHVtcEZvcm1hdCBmbXQ7CglTZXJ2aWNlRHVtcGVyIChEdW1wRm9ybWF0IGZtdCkg
ewoJCXRoaXMuZm10PWZtdDsKCX0KCVN0cmluZyBkdW1wKE5TTm9kZSBub2RlKSB7CmxvZygiZHVt
cCBub2RlICIrbm9kZS5nZXROU05hbWUoKS50b1N0cmluZygpKTsKCQlTdHJpbmdCdWlsZGVyIGR1
bXA9bmV3IFN0cmluZ0J1aWxkZXIoKTsKCQlpZiAobm9kZSBpbnN0YW5jZW9mIE5TSW50ZXJmYWNl
KSB7CgkJCU5TSW50ZXJmYWNlIGZvbGRlcj0oTlNJbnRlcmZhY2Upbm9kZTsKCQkJZHVtcEZvbGRl
ckhlYWRlcihkdW1wLGZvbGRlcik7CgkJCU5TTm9kZVtdIG5vZGVzPWZvbGRlci5nZXROb2Rlcygp
OwoJCQlpZiAobm9kZXMhPW51bGwpIHsKCQkJCWZvciAoaW50IGk9MDtpPG5vZGVzLmxlbmd0aDsr
K2kpIHsKCQkJCQlkdW1wLmFwcGVuZChkdW1wKG5vZGVzW2ldKSk7CgkJCQl9CgkJCX0KCQl9CgkJ
ZWxzZSBpZiAobm9kZSBpbnN0YW5jZW9mIEZsb3dTdmNJbXBsKSB7CgkJCWR1bXAuYXBwZW5kKGR1
bXAoKEZsb3dTdmNJbXBsKW5vZGUpKTsKCQl9CgkJcmV0dXJuIGR1bXAudG9TdHJpbmcoKTsKCX0K
CXZvaWQgZHVtcEZvbGRlckhlYWRlcihTdHJpbmdCdWlsZGVyIGR1bXAsTlNJbnRlcmZhY2Ugbm9k
ZSkgewoJCWR1bXAuYXBwZW5kKGZtdC5nZW5Gb2xkZXJTdGFydCgpKTsKCQlkdW1wLmFwcGVuZCgi
Q2FycGV0YSAiKTsKCQlkdW1wLmFwcGVuZChub2RlLmdldE5TTmFtZSgpLnRvU3RyaW5nKCkpOwoJ
CWR1bXAuYXBwZW5kKGZtdC5nZW5Gb2xkZXJFbmQoKSk7CgkJZm10Lmluc2VydEluZGVudChkdW1w
LCB0cnVlLCAwKTsKCX0KCXZvaWQgZHVtcFNlcnZpY2VIZWFkZXIoU3RyaW5nQnVpbGRlciBkdW1w
LEZsb3dTdmNJbXBsIHN2YykgewoJCWR1bXAuYXBwZW5kKGZtdC5nZW5TZXJ2aWNlU3RhcnQoKSk7
CgkJZHVtcC5hcHBlbmQoIlNlcnZpY2lvICIpOwoJCWR1bXAuYXBwZW5kKHN2Yy5nZXROU05hbWUo
KS50b1N0cmluZygpKTsKCQlkdW1wLmFwcGVuZChmbXQuZ2VuU2VydmljZUVuZCgpKTsKCQlmbXQu
aW5zZXJ0SW5kZW50KGR1bXAsIHRydWUsIDApOwoJfQoJdm9pZCBkdW1wU2VydmljZVN1YkhlYWRl
cihTdHJpbmdCdWlsZGVyIGR1bXAsU3RyaW5nIGhlYWRlcikgewoJCWR1bXAuYXBwZW5kKGZtdC5n
ZW5TZXJ2aWNlU3ViSGVhZGVyU3RhcnQoKSk7CgkJZHVtcC5hcHBlbmQoaGVhZGVyKTsKCQlkdW1w
LmFwcGVuZChmbXQuZ2VuU2VydmljZVN1YkhlYWRlckVuZCgpKTsKCQlmbXQuaW5zZXJ0SW5kZW50
KGR1bXAsIHRydWUsIDApOwoJfQoJU3RyaW5nIGR1bXAoRmxvd1N2Y0ltcGwgc3ZjKSB7CmxvZygi
ZHVtcCBmbG93c3ZjICIrc3ZjLmdldE5TTmFtZSgpLnRvU3RyaW5nKCkpOwoJCVN0cmluZ0J1aWxk
ZXIgZHVtcD1uZXcgU3RyaW5nQnVpbGRlcigpOwoJCWR1bXBTZXJ2aWNlSGVhZGVyKGR1bXAsc3Zj
KTsKCgkJRmxvd0R1bXBlciBmZD1uZXcgRmxvd0R1bXBlcihmbXQpOwoJCQoJCU5TU2lnbmF0dXJl
IHNpZz1zdmMuZ2V0U2lnKCk7CgkJCgkJZHVtcFNlcnZpY2VTdWJIZWFkZXIoZHVtcCwiSW5wdXQi
KTsKCQlkdW1wLmFwcGVuZChmZC5kdW1wKHNpZy5nZXRJbnB1dCgpKSk7CgkJCgkJZHVtcFNlcnZp
Y2VTdWJIZWFkZXIoZHVtcCwiT3V0cHV0Iik7CgkJZHVtcC5hcHBlbmQoZmQuZHVtcChzaWcuZ2V0
T3V0cHV0KCkpKTsKCQkKCQlGbG93Um9vdCBmdz1zdmMuZ2V0Rmxvd1Jvb3QoKTsKCQlkdW1wU2Vy
dmljZVN1YkhlYWRlcihkdW1wLCJJbXBsZW1lbnRhdGlvbiIpOwoJCWR1bXAuYXBwZW5kKGZkLmR1
bXAoZncpKTsKCQkKCQlyZXR1cm4gZHVtcC50b1N0cmluZygpOwoJfQp9IC8vIGNsYXNzIFNlcnZp
Y2VEdW1wZXIgCgpzdGF0aWMgY2xhc3MgRmxvd0R1bXBlciB7CglpbnQgaW5kZW50PTA7CglEdW1w
Rm9ybWF0IGZtdDsKCQoJRmxvd0R1bXBlcihEdW1wRm9ybWF0IGZtdCkgewoJCXRoaXMuZm10PWZt
dDsKCX0KCQoJU3RyaW5nIGR1bXAoRmxvd0VsZW1lbnQgZmUpIHsKCQlyZXR1cm4gZHVtcChmZSxm
YWxzZSk7Cgl9CglTdHJpbmcgZ2V0TGFiZWwoRmxvd0VsZW1lbnQgZmUpIHsKCQlTdHJpbmcgbGFi
ZWw9ZmUuZ2V0TmFtZSgpOwoJCWlmIChsYWJlbCE9bnVsbCkgewoJCQlpZiAoZmUgaW5zdGFuY2Vv
ZiBGbG93TWFwU2V0ICYmICJTZXR0ZXIiLmVxdWFscyhsYWJlbCkpCgkJCQlsYWJlbD1udWxsOwoJ
CX0KCQlyZXR1cm4gbGFiZWw7Cgl9CglTdHJpbmcgZHVtcChGbG93RWxlbWVudCBmZSwgYm9vbGVh
biBvbWl0Rmlyc3RJbmRlbnQpIHsKCQlTdHJpbmdCdWlsZGVyIGR1bXA9bmV3IFN0cmluZ0J1aWxk
ZXIoKTsKCQlpZiAoZmUgaW5zdGFuY2VvZiBGbG93Um9vdCkgewoJCQlkdW1wQ2hpbGRyZW4oZHVt
cCxmZSxmYWxzZSk7CgkJfQoJCWVsc2UgewoJCQlpZiAoIW9taXRGaXJzdEluZGVudCkKCQkJCWlu
c2VydEluZGVudChkdW1wKTsKCQkJaWYgKCFmZS5pc0VuYWJsZWQoKSkgewoJCQkJZHVtcC5hcHBl
bmQoZm10LmdlbkRpc2FibGVkU3RhcnQoKSk7CgkJCQlkdW1wLmFwcGVuZCgiLyogZGlzYWJsZWQg
Iik7CgkJCX0KCQkJU3RyaW5nIGxhYmVsPWdldExhYmVsKGZlKTsKCQkJaWYgKGxhYmVsIT1udWxs
KSB7CgkJCQlkdW1wLmFwcGVuZChsYWJlbCk7CgkJCQlkdW1wLmFwcGVuZCgiOiAiKTsKCQkJfQoJ
CQkKCQkJaWYgKGZlIGluc3RhbmNlb2YgRmxvd01hcENvcHkpCgkJCQlkdW1wLmFwcGVuZChkdW1w
KChGbG93TWFwQ29weSlmZSkpOwoJCQllbHNlIGlmIChmZSBpbnN0YW5jZW9mIEZsb3dNYXBEZWxl
dGUpCgkJCQlkdW1wLmFwcGVuZChkdW1wKChGbG93TWFwRGVsZXRlKWZlKSk7CgkJCWVsc2UgaWYg
KGZlIGluc3RhbmNlb2YgRmxvd01hcEludm9rZSkKCQkJCWR1bXAuYXBwZW5kKGR1bXAoKEZsb3dN
YXBJbnZva2UpZmUpKTsKCQkJZWxzZSBpZiAoZmUgaW5zdGFuY2VvZiBGbG93TWFwKQoJCQkJZHVt
cC5hcHBlbmQoZHVtcCgoRmxvd01hcClmZSkpOwoJCQllbHNlIGlmIChmZSBpbnN0YW5jZW9mIEZs
b3dNYXBTZXQpCgkJCQlkdW1wLmFwcGVuZChkdW1wKChGbG93TWFwU2V0KWZlKSk7CgkJCWVsc2Ug
aWYgKGZlIGluc3RhbmNlb2YgRmxvd0ludm9rZSkKCQkJCWR1bXAuYXBwZW5kKGR1bXAoKEZsb3dJ
bnZva2UpZmUpKTsKCQkJZWxzZSBpZiAoZmUgaW5zdGFuY2VvZiBGbG93U2VxdWVuY2UpCgkJCQlk
dW1wLmFwcGVuZChkdW1wKChGbG93U2VxdWVuY2UpZmUpKTsKCQkJZWxzZSBpZiAoZmUgaW5zdGFu
Y2VvZiBGbG93QnJhbmNoKQoJCQkJZHVtcC5hcHBlbmQoZHVtcCgoRmxvd0JyYW5jaClmZSkpOwoJ
CQllbHNlIGlmIChmZSBpbnN0YW5jZW9mIEZsb3dFeGl0KQoJCQkJZHVtcC5hcHBlbmQoZHVtcCgo
Rmxvd0V4aXQpZmUpKTsKCQkJZWxzZSB7CgkJCQlkZWZhdWx0RHVtcChkdW1wLGZlKTsKCQkJfQoJ
CQlpZiAoIWZlLmlzRW5hYmxlZCgpKSB7CgkJCQlkdW1wLmFwcGVuZCgiKi8iKTsKCQkJCWR1bXAu
YXBwZW5kKGZtdC5nZW5EaXNhYmxlZEVuZCgpKTsKCQkJfQoJCX0KCQlyZXR1cm4gZHVtcC50b1N0
cmluZygpOwoJfQoJdm9pZCBkZWZhdWx0RHVtcChTdHJpbmdCdWlsZGVyIGR1bXAsIEZsb3dFbGVt
ZW50IGZlKSB7CgkJZGVmYXVsdER1bXAoZHVtcCxmZSx0cnVlKTsKCX0KCXZvaWQgYXBwZW5kQ210
KFN0cmluZ0J1aWxkZXIgZHVtcCxGbG93RWxlbWVudCBmZSkgewoJCVN0cmluZyBjbXQ9ZmUuZ2V0
Q29tbWVudCgpOwoJCWlmIChjbXQhPW51bGwgJiYgY210Lmxlbmd0aCgpPjApIHsKCQkJZHVtcC5h
cHBlbmQoZm10LmdlbkNvbWVudGFyaW8oY210KSk7CgkJfQoJfQoJdm9pZCBkdW1wU3RhcnQoU3Ry
aW5nQnVpbGRlciBkdW1wLCBGbG93RWxlbWVudCBmZSwgYm9vbGVhbiBpbmNsdWRlQ2xhc3NOYW1l
KSB7CgkJU3RyaW5nIGZpcnN0PWZlLnRvU3RyaW5nKCk7CgkJZHVtcC5hcHBlbmQoZmlyc3QpOwoJ
CWlmIChpbmNsdWRlQ2xhc3NOYW1lKSB7CgkJCWR1bXAuYXBwZW5kKCIgKCIpOwoJCQlkdW1wLmFw
cGVuZChmZS5nZXRDbGFzcygpLmdldE5hbWUoKSk7CgkJCWR1bXAuYXBwZW5kKCIpIik7CgkJfQoJ
CWFwcGVuZENtdChkdW1wLGZlKTsKCQkvL2R1bXAuYXBwZW5kKCIgeyIpOwoJCQoJfQoJdm9pZCBk
ZWZhdWx0RHVtcChTdHJpbmdCdWlsZGVyIGR1bXAsIEZsb3dFbGVtZW50IGZlLCBib29sZWFuIGlu
Y2x1ZGVDbGFzc05hbWUpIHsKCQlkdW1wU3RhcnQoZHVtcCxmZSxpbmNsdWRlQ2xhc3NOYW1lKTsK
CQlkdW1wQ2hpbGRyZW4oZHVtcCxmZSk7CgkJZHVtcEVuZChkdW1wLGZlKTsKCX0KCXZvaWQgZHVt
cEVuZChTdHJpbmdCdWlsZGVyIGR1bXAsRmxvd0VsZW1lbnQgZmUpIHsKCQkvKmluc2VydEluZGVu
dChkdW1wLHRydWUpOwoJCVN0cmluZyBmaXJzdD1mZS50b1N0cmluZygpOwoJCWR1bXAuYXBwZW5k
KCJ9ICIpOwoJCWR1bXAuYXBwZW5kKGZtdC5nZW5Db21lbnRhcmlvKGZpcnN0KSk7Ki8KCX0KCXZv
aWQgZHVtcENoaWxkcmVuKFN0cmluZ0J1aWxkZXIgZHVtcCwgRmxvd0VsZW1lbnQgZmUpIHsKCQlk
dW1wQ2hpbGRyZW4oZHVtcCwgZmUsIHRydWUpOwoJfQoJdm9pZCBkdW1wQ2hpbGRyZW4oU3RyaW5n
QnVpbGRlciBkdW1wLCBGbG93RWxlbWVudCBmZSxib29sZWFuIGRvSW5kZW50KSB7CgkJRmxvd0Vs
ZW1lbnRbXSBjaGlsZHJlbj1mZS5nZXROb2RlcygpOwoJCWlmIChjaGlsZHJlbiE9bnVsbCkgewoJ
CQlpZiAoZG9JbmRlbnQpCgkJCQkrK2luZGVudDsKCQkJZm9yIChGbG93RWxlbWVudCBjZmU6Y2hp
bGRyZW4pIHsKCQkJCWFwcGVuZEVvbChkdW1wKTsKCQkJCVN0cmluZyBjaGlsZER1bXA9ZHVtcChj
ZmUpOwoJCQkJZHVtcC5hcHBlbmQoY2hpbGREdW1wKTsKCQkJfQoJCQlpZiAoZG9JbmRlbnQpCgkJ
CQktLWluZGVudDsKCQl9Cgl9CgkKCVN0cmluZ0J1aWxkZXIgaW5zZXJ0SW5kZW50KFN0cmluZ0J1
aWxkZXIgZHVtcCkgewoJCXJldHVybiBpbnNlcnRJbmRlbnQoZHVtcCxmYWxzZSk7Cgl9CglTdHJp
bmdCdWlsZGVyIGluc2VydEluZGVudChTdHJpbmdCdWlsZGVyIGR1bXAsYm9vbGVhbiBlb2wpIHsK
CQlyZXR1cm4gZm10Lmluc2VydEluZGVudChkdW1wLCBlb2wsIGluZGVudCk7Cgl9CgkKCVN0cmlu
Z0J1aWxkZXIgYXBwZW5kRW9sKFN0cmluZ0J1aWxkZXIgZHVtcCkgewoJCXJldHVybiBmbXQuYXBw
ZW5kRW9sKGR1bXApOwoJfQoKCVN0cmluZyBkdW1wKEZsb3dNYXBDb3B5IGZlKSB7CgkJU3RyaW5n
QnVpbGRlciBkdW1wPW5ldyBTdHJpbmdCdWlsZGVyKCk7CgkJCgkJZHVtcC5hcHBlbmQoZmUudG9T
dHJpbmcoKSk7CgkJZHVtcC5hcHBlbmQoIiAiKTsKCQlkdW1wLmFwcGVuZChkdW1wTWFwU291cmNl
KGZlLmdldFBhcnNlZEZyb20oKSkpOwoJCWR1bXAuYXBwZW5kKGR1bXBNYXBUYXJnZXQoZmUuZ2V0
UGFyc2VkVG8oKSkpOwoJCQoJCXJldHVybiBkdW1wLnRvU3RyaW5nKCk7Cgl9CgkKCVN0cmluZyBk
dW1wKEZsb3dNYXBEZWxldGUgZmUpIHsKCQlTdHJpbmdCdWlsZGVyIGR1bXA9bmV3IFN0cmluZ0J1
aWxkZXIoKTsKCQkKCQlkdW1wLmFwcGVuZChmZS50b1N0cmluZygpKTsKCQlkdW1wLmFwcGVuZCgi
ICIpOwoJCWR1bXAuYXBwZW5kKGR1bXBNYXBTb3VyY2UoZmUuZ2V0UGFyc2VkUGF0aCgpKSk7CgkJ
CgkJcmV0dXJuIGR1bXAudG9TdHJpbmcoKTsKCX0KCQoJU3RyaW5nIGR1bXAoRmxvd01hcEludm9r
ZSBmZSkgewoJCVN0cmluZ0J1aWxkZXIgZHVtcD1uZXcgU3RyaW5nQnVpbGRlcigpOwoJCQoJCWR1
bXAuYXBwZW5kKGZlLnRvU3RyaW5nKCkpOwoJCWR1bXAuYXBwZW5kKCIgIik7CgkJZHVtcC5hcHBl
bmQoZmUuZ2V0U2VydmljZSgpLnRvU3RyaW5nKCkpOwoJCQoJCWR1bXBJT01hcChkdW1wLCJJbnB1
dCIsZmUuZ2V0SW5wdXRNYXAoKSk7IAoJCWR1bXBJT01hcChkdW1wLCJPdXRwdXQiLGZlLmdldE91
dHB1dE1hcCgpKTsgCgkJCgkJcmV0dXJuIGR1bXAudG9TdHJpbmcoKTsKCX0KCQoJdm9pZCBkdW1w
SU9NYXAoU3RyaW5nQnVpbGRlciBkdW1wLFN0cmluZyBpbnB1dE91dHB1dCxGbG93TWFwIGZlKSB7
IAoJCWlmIChmZSE9bnVsbCAmJiBmZS5nZXROb2RlQ291bnQoKT4wKSB7CgkJCSsraW5kZW50OwoJ
CQlpbnNlcnRJbmRlbnQoZHVtcCx0cnVlKTsKCQkJZHVtcC5hcHBlbmQoaW5wdXRPdXRwdXQpOwoJ
CQlkdW1wLmFwcGVuZCgiICIpOwoJCQlkdW1wLmFwcGVuZChkdW1wKGZlLCB0cnVlKSk7CgkJCS0t
aW5kZW50OwoJCX0KCX0KCglTdHJpbmcgZHVtcChTdHJpbmcgaW5vdXQsTlNSZWNvcmQgcmVjKSB7
CgkJU3RyaW5nQnVpbGRlciBkdW1wPW5ldyBTdHJpbmdCdWlsZGVyKCk7CgkJaWYgKGlub3V0IT1u
dWxsKSB7CgkJCWR1bXAuYXBwZW5kKGlub3V0KTsKCQkJZHVtcC5hcHBlbmQoIjoiKTsKCQkJYXBw
ZW5kRW9sKGR1bXApOwoJCX0KCQlkdW1wLmFwcGVuZChkdW1wKHJlYykpOwoJCXJldHVybiBkdW1w
LnRvU3RyaW5nKCk7Cgl9CglTdHJpbmcgZHVtcChOU1JlY29yZCByZWMpIHsKCQlyZXR1cm4gZHVt
cChyZWMsTUFYX1JFQ19ERVBUSCk7Cgl9CglTdHJpbmcgZHVtcChOU1JlY29yZCByZWMsIGludCBk
ZXB0aExlZnQpIHsKCQlpZiAoZGVwdGhMZWZ0PD0wKSB7CgkJCXJldHVybiAiKEh1eSAtIHJlY3Vy
c2l2bywgZWouIGdldExhc3RFcnJvcikiOwoJCX0KCQlTdHJpbmdCdWlsZGVyIGR1bXA9bmV3IFN0
cmluZ0J1aWxkZXIoKTsKCQlib29sZWFuIGZpcnN0RmllbGQ9dHJ1ZTsKCQlpbnQgZGVwdGhMZWZ0
MT1kZXB0aExlZnQtMTsKCQlmb3IgKE5TRmllbGQgZmllbGQ6cmVjLmdldEFjdHVhbEZpZWxkcygp
KSB7CgkJCWluc2VydEluZGVudChkdW1wLCFmaXJzdEZpZWxkKTsKCQkJaWYgKGZpcnN0RmllbGQp
CgkJCQlmaXJzdEZpZWxkPWZhbHNlOwoJCQlkdW1wLmFwcGVuZChmaWVsZC5nZXROYW1lKCkpOwoJ
CQlpZiAoZmllbGQgaW5zdGFuY2VvZiBOU1JlY29yZCkgewoJCQkJKytpbmRlbnQ7CgkJCQlkdW1w
LmFwcGVuZChkdW1wKChOU1JlY29yZClmaWVsZCxkZXB0aExlZnQxKSk7CgkJCQktLWluZGVudDsK
CQkJfQoJCX0KCQlyZXR1cm4gZHVtcC50b1N0cmluZygpOwoJfQoJCglTdHJpbmcgZHVtcChGbG93
TWFwIGZlKSB7CgkJU3RyaW5nQnVpbGRlciBkdW1wPW5ldyBTdHJpbmdCdWlsZGVyKCk7CgkJZGVm
YXVsdER1bXAoZHVtcCxmZSxmYWxzZSk7CgkJcmV0dXJuIGR1bXAudG9TdHJpbmcoKTsKCX0KCVN0
cmluZyBkdW1wKEZsb3dNYXBTZXQgZmUpIHsKCQlTdHJpbmdCdWlsZGVyIGR1bXA9bmV3IFN0cmlu
Z0J1aWxkZXIoKTsKCQlkdW1wLmFwcGVuZChmZS50b1N0cmluZygpKTsKCQlkdW1wLmFwcGVuZCgi
ICIpOwoJCWR1bXAuYXBwZW5kKGR1bXBWYWx1ZShmZS5nZXRJbnB1dCgpKSk7CgkJZHVtcC5hcHBl
bmQoZHVtcE1hcFRhcmdldChmZS5nZXRQYXJzZWRQYXRoKCkpKTsKCgkJcmV0dXJuIGR1bXAudG9T
dHJpbmcoKTsKCX0KCVN0cmluZyBkdW1wVmFsdWUoT2JqZWN0IHZhbHVlKSB7CgkJU3RyaW5nQnVp
bGRlciBkdW1wPW5ldyBTdHJpbmdCdWlsZGVyKCk7CgkJaWYgKHZhbHVlPT1udWxsKQoJCQlkdW1w
LmFwcGVuZCgiKG51bGwgdmFsdWUpIik7CgkJZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBJRGF0
YSkgewoJCQlJRGF0YSB2PShJRGF0YSl2YWx1ZTsKCQkJZHVtcC5hcHBlbmQoInsiKTsKCQkJZHVt
cC5hcHBlbmQoZm10LmdlbkNvbWVudGFyaW8oInZhbG9yIGRlIGRvY3VtZW50bzoiKSk7CgkJCSsr
aW5kZW50OwoJCQlJRGF0YUN1cnNvciBjPXYuZ2V0Q3Vyc29yKCk7CgkJCWJvb2xlYW4gbW9yZTsK
CQkJZm9yIChtb3JlPWMuZmlyc3QoKTttb3JlO21vcmU9Yy5uZXh0KCkpIHsKCQkJCWluc2VydElu
ZGVudChkdW1wLHRydWUpOwoJCQkJZHVtcC5hcHBlbmQoYy5nZXRLZXkoKSk7CgkJCQlkdW1wLmFw
cGVuZCgiPSIpOwoJCQkJZHVtcC5hcHBlbmQoZHVtcFZhbHVlKGMuZ2V0VmFsdWUoKSkpOwoJCQl9
CgkJCS0taW5kZW50OwoJCQlpbnNlcnRJbmRlbnQoZHVtcCx0cnVlKTsKCQkJZHVtcC5hcHBlbmQo
In0iKTsKCQl9CgkJZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBPYmplY3RbXSkgewoJCQlPYmpl
Y3RbXSB2PShPYmplY3RbXSl2YWx1ZTsKCQkJZHVtcC5hcHBlbmQoInsiKTsKCQkJZHVtcC5hcHBl
bmQoZm10LmdlbkNvbWVudGFyaW8oImFycmF5OiIpKTsKCQkJKytpbmRlbnQ7CgkJCWZvciAoaW50
IGk9MDtpPHYubGVuZ3RoOysraSkgewoJCQkJaW5zZXJ0SW5kZW50KGR1bXAsdHJ1ZSk7CgkJCQlk
dW1wLmFwcGVuZChkdW1wVmFsdWUodltpXSkpOwoJCQl9CgkJCS0taW5kZW50OwoJCQlpbnNlcnRJ
bmRlbnQoZHVtcCx0cnVlKTsKCQkJZHVtcC5hcHBlbmQoIn0iKTsKCQl9CgkJZWxzZSB7CgkJCWR1
bXAuYXBwZW5kKGZtdC5nZW5MaXRlcmFsKCInIit2YWx1ZSsiJyIpKTsKCQl9CgkJcmV0dXJuIGR1
bXAudG9TdHJpbmcoKTsKCX0KCVN0cmluZyBkdW1wTWFwU291cmNlKFN0cmluZyBuYW1lKSB7CgkJ
U3RyaW5nQnVpbGRlciBkdW1wPW5ldyBTdHJpbmdCdWlsZGVyKCk7CgkJZHVtcC5hcHBlbmQobmFt
ZSk7CgkJcmV0dXJuIGR1bXAudG9TdHJpbmcoKTsKCX0KCVN0cmluZyBkdW1wTWFwU291cmNlKE1h
cFdtUGF0aEluZm8gcGF0aCkgewoJCXJldHVybiBkdW1wTWFwU291cmNlKHBhdGguZ2V0UGF0aERp
c3BsYXlTdHJpbmcoKSk7Cgl9CgkKCVN0cmluZyBkdW1wTWFwVGFyZ2V0KE1hcFdtUGF0aEluZm8g
cGF0aCkgewoJCVN0cmluZ0J1aWxkZXIgZHVtcD1uZXcgU3RyaW5nQnVpbGRlcigpOwoJCWR1bXAu
YXBwZW5kKCIgLT4gIik7CgkJZHVtcC5hcHBlbmQocGF0aC5nZXRQYXRoRGlzcGxheVN0cmluZygp
KTsKCQlyZXR1cm4gZHVtcC50b1N0cmluZygpOwoJfQoJCglTdHJpbmcgZHVtcChGbG93SW52b2tl
IGZlKSB7CgkJU3RyaW5nQnVpbGRlciBkdW1wPW5ldyBTdHJpbmdCdWlsZGVyKCk7CgkJCgkJZHVt
cC5hcHBlbmQoZmUudG9TdHJpbmcoKSk7CgkJZHVtcC5hcHBlbmQoIiAiKTsKCQlkdW1wLmFwcGVu
ZChmZS5nZXRTZXJ2aWNlKCkudG9TdHJpbmcoKSk7CgkJYXBwZW5kQ210KGR1bXAsZmUpOwoJCS8v
ZHVtcC5hcHBlbmQoIiB7Iik7CgkJCgkJZHVtcElPTWFwKGR1bXAsIklucHV0IixmZS5nZXRJbnB1
dE1hcCgpKTsgCgkJZHVtcElPTWFwKGR1bXAsIk91dHB1dCIsZmUuZ2V0T3V0cHV0TWFwKCkpOyAK
CQkKCQlkdW1wRW5kKGR1bXAsZmUpOwoJCXJldHVybiBkdW1wLnRvU3RyaW5nKCk7Cgl9CgkKCVN0
cmluZyBkdW1wKEZsb3dTZXF1ZW5jZSBmZSkgewoJCVN0cmluZ0J1aWxkZXIgZHVtcD1uZXcgU3Ry
aW5nQnVpbGRlcigpOwoJCQoJCWR1bXAuYXBwZW5kKGZlLnRvU3RyaW5nKCkpOwoJCVN0cmluZyBm
dD1mZS5nZXRGb3JtVHlwZSgpOwoJCWlmIChmdCE9bnVsbCAmJiAhIlNFUVVFTkNFIi5lcXVhbHMo
ZnQpKSB7CgkJCWR1bXAuYXBwZW5kKCIoIik7CgkJCWR1bXAuYXBwZW5kKGZ0KTsKCQkJZHVtcC5h
cHBlbmQoIikiKTsKCQl9CgkJZHVtcC5hcHBlbmQoIiAiKTsKCQlpbnQgZXhpdE9uPWZlLmdldEV4
aXRPbigpOwoJCWlmIChleGl0T24hPTAgLyogRkFJTFVSRSAqLykgewoJCQlkdW1wLmFwcGVuZCgi
IGV4aXQgb24gIik7CgkJCVN0cmluZyBleGl0T25TdHI7CgkJCWlmIChleGl0T249PTEpCgkJCQll
eGl0T25TdHI9IlN1Y2Nlc3MiOwoJCQllbHNlIGlmIChleGl0T249PTIpCgkJCQlleGl0T25TdHI9
IkRvbmUiOwoJCQllbHNlCgkJCQlleGl0T25TdHI9IigiK2V4aXRPbisiKSI7CgkJCWR1bXAuYXBw
ZW5kKGV4aXRPblN0cik7CgkJfQoJCWFwcGVuZENtdChkdW1wLGZlKTsKCQlkdW1wQ2hpbGRyZW4o
ZHVtcCxmZSk7CgkJZHVtcEVuZChkdW1wLGZlKTsKCQlyZXR1cm4gZHVtcC50b1N0cmluZygpOwoJ
fQoJCglTdHJpbmcgZHVtcChGbG93QnJhbmNoIGZlKSB7CgkJU3RyaW5nQnVpbGRlciBkdW1wPW5l
dyBTdHJpbmdCdWlsZGVyKCk7CgkJCgkJZHVtcC5hcHBlbmQoZmUudG9TdHJpbmcoKSk7CgkJZHVt
cC5hcHBlbmQoIiAiKTsKCQlTdHJpbmcgc3dpdGNoT249ZmUuZ2V0QnJhbmNoU3dpdGNoKCk7CgkJ
aWYgKHN3aXRjaE9uIT1udWxsICYmIHN3aXRjaE9uLmxlbmd0aCgpPjApIHsKCQkJZHVtcC5hcHBl
bmQoIm9uICIpOwoJCQlkdW1wLmFwcGVuZChzd2l0Y2hPbik7CgkJfQoJCWFwcGVuZENtdChkdW1w
LGZlKTsKCQlkdW1wQ2hpbGRyZW4oZHVtcCxmZSk7CgkJZHVtcEVuZChkdW1wLGZlKTsKCQlyZXR1
cm4gZHVtcC50b1N0cmluZygpOwoJfQoKCVN0cmluZyBkdW1wKEZsb3dFeGl0IGZlKSB7CgkJU3Ry
aW5nQnVpbGRlciBkdW1wPW5ldyBTdHJpbmdCdWlsZGVyKCk7CgkJCgkJZHVtcC5hcHBlbmQoZmUu
dG9TdHJpbmcoKSk7CgkJZHVtcC5hcHBlbmQoIiAiKTsKCQlTdHJpbmcgZXhpdEZyb209ZmUuZ2V0
RXhpdEZyb20oKTsKCQlkdW1wLmFwcGVuZCgiIGZyb20gIik7CgkJZHVtcC5hcHBlbmQoZXhpdEZy
b20pOwoJCVN0cmluZyBleGl0V2l0aD1mZS5nZXRTaWduYWwoKTsKCQlkdW1wLmFwcGVuZCgiIHdp
dGggIik7CgkJZHVtcC5hcHBlbmQoZXhpdFdpdGgpOwoJCVN0cmluZyBleGl0TXNnPWZlLmdldEZh
aWx1cmVNZXNzYWdlKCk7CgkJaWYgKGV4aXRNc2chPW51bGwgJiYgZXhpdE1zZy5sZW5ndGgoKT4w
KSB7CgkJCWR1bXAuYXBwZW5kKCIgIik7CgkJCWR1bXAuYXBwZW5kKGR1bXBWYWx1ZShleGl0TXNn
KSk7CgkJfQoJCWFwcGVuZENtdChkdW1wLGZlKTsKCQlkdW1wQ2hpbGRyZW4oZHVtcCxmZSk7CgkJ
ZHVtcEVuZChkdW1wLGZlKTsKCQlyZXR1cm4gZHVtcC50b1N0cmluZygpOwoJfQp9IC8vIGNsYXNz
IEZsb3dEdW1wZXIKCnN0YXRpYyBhYnN0cmFjdCBjbGFzcyBEdW1wRm9ybWF0IHsKCWFic3RyYWN0
IFN0cmluZ0J1aWxkZXIgaW5zZXJ0SW5kZW50KFN0cmluZ0J1aWxkZXIgZHVtcCxib29sZWFuIGVv
bCxpbnQgaW5kZW50KTsKCWFic3RyYWN0IFN0cmluZ0J1aWxkZXIgYXBwZW5kRW9sKFN0cmluZ0J1
aWxkZXIgZHVtcCk7CglhYnN0cmFjdCBTdHJpbmcgZ2VuQ29tZW50YXJpbyhTdHJpbmcgY210KTsK
CWFic3RyYWN0IFN0cmluZyBnZW5MaXRlcmFsKFN0cmluZyBjbXQpOwoJYWJzdHJhY3QgU3RyaW5n
IGdlbkRpc2FibGVkU3RhcnQoKTsKCWFic3RyYWN0IFN0cmluZyBnZW5EaXNhYmxlZEVuZCgpOwoJ
YWJzdHJhY3QgU3RyaW5nIGdlbkZvbGRlclN0YXJ0KCk7CglhYnN0cmFjdCBTdHJpbmcgZ2VuRm9s
ZGVyRW5kKCk7CglhYnN0cmFjdCBTdHJpbmcgZ2VuU2VydmljZVN0YXJ0KCk7CglhYnN0cmFjdCBT
dHJpbmcgZ2VuU2VydmljZUVuZCgpOwoJYWJzdHJhY3QgU3RyaW5nIGdlblNlcnZpY2VTdWJIZWFk
ZXJTdGFydCgpOwoJYWJzdHJhY3QgU3RyaW5nIGdlblNlcnZpY2VTdWJIZWFkZXJFbmQoKTsKfSAv
LyBjbGFzcyBEdW1wRm9ybWF0CgpzdGF0aWMgY2xhc3MgRHVtcEZvcm1hdFRleHQgZXh0ZW5kcyBE
dW1wRm9ybWF0IHsKCVN0cmluZ0J1aWxkZXIgaW5zZXJ0SW5kZW50KFN0cmluZ0J1aWxkZXIgZHVt
cCxib29sZWFuIGVvbCxpbnQgaW5kZW50KSB7CgkJaWYgKGVvbCkKCQkJZHVtcC5hcHBlbmQoJ1xu
Jyk7CgkJZm9yIChpbnQgaT0wO2k8aW5kZW50OysraSkgewoJCQlkdW1wLmFwcGVuZCgiICAiKTsK
CQl9CgkJcmV0dXJuIGR1bXA7Cgl9CglTdHJpbmdCdWlsZGVyIGFwcGVuZEVvbChTdHJpbmdCdWls
ZGVyIGR1bXApIHsKCQlkdW1wLmFwcGVuZCgnXG4nKTsKCQlyZXR1cm4gZHVtcDsKCX0KCVN0cmlu
ZyBnZW5Db21lbnRhcmlvKFN0cmluZyBjbXQpIHsKCQlTdHJpbmdCdWlsZGVyIGR1bXA9bmV3IFN0
cmluZ0J1aWxkZXIoKTsKCQlkdW1wLmFwcGVuZCgiICgiKTsKCQlkdW1wLmFwcGVuZChjbXQpOwoJ
CWR1bXAuYXBwZW5kKCIpIik7CgkJcmV0dXJuIGR1bXAudG9TdHJpbmcoKTsKCX0KCVN0cmluZyBn
ZW5MaXRlcmFsKFN0cmluZyBjbXQpIHsKCQlyZXR1cm4gY210OwoJfQoJU3RyaW5nIGdlbkRpc2Fi
bGVkU3RhcnQoKSB7CgkJcmV0dXJuICIiOwoJfQoJU3RyaW5nIGdlbkRpc2FibGVkRW5kKCkgewoJ
CXJldHVybiAiIjsKCX0KCVN0cmluZyBnZW5Gb2xkZXJTdGFydCgpIHsKCQlyZXR1cm4gIi0tICI7
Cgl9CglTdHJpbmcgZ2VuRm9sZGVyRW5kKCkgewoJCXJldHVybiAiIjsKCX0KCVN0cmluZyBnZW5T
ZXJ2aWNlU3RhcnQoKSB7CgkJcmV0dXJuICItLS0tICI7Cgl9CglTdHJpbmcgZ2VuU2VydmljZUVu
ZCgpIHsKCQlyZXR1cm4gIiI7Cgl9CglTdHJpbmcgZ2VuU2VydmljZVN1YkhlYWRlclN0YXJ0KCkg
ewoJCXJldHVybiAiIjsKCX0KCVN0cmluZyBnZW5TZXJ2aWNlU3ViSGVhZGVyRW5kKCkgewoJCXJl
dHVybiAiIjsKCX0KfSAvLyBjbGFzcyBEdW1wRm9ybWF0VGV4dCAKCnN0YXRpYyBjbGFzcyBEdW1w
Rm9ybWF0SFRNTCBleHRlbmRzIER1bXBGb3JtYXQgewoJU3RyaW5nIGVzY2FwZShTdHJpbmcgdHgp
IHsKCQlTdHJpbmdCdWlsZGVyIGV0eD1uZXcgU3RyaW5nQnVpbGRlcigpOwoJCWludCBpLEk7CgkJ
Zm9yIChpPTAsST10eC5sZW5ndGgoKTtpPEk7KytpKSB7CgkJCWNoYXIgYz10eC5jaGFyQXQoaSk7
CgkJCWlmIChjPT0nPCcpCgkJCQlldHguYXBwZW5kKCImbHQ7Iik7CgkJCWVsc2UgaWYgKGM9PSc+
JykKCQkJCWV0eC5hcHBlbmQoIiZndDsiKTsKCQkJZWxzZSBpZiAoYz09JyYnKQoJCQkJZXR4LmFw
cGVuZCgiJmFtcDsiKTsKCQkJZWxzZQoJCQkJZXR4LmFwcGVuZChjKTsKCQl9CgkJcmV0dXJuIGV0
eC50b1N0cmluZygpOwoJfQoJU3RyaW5nQnVpbGRlciBpbnNlcnRJbmRlbnQoU3RyaW5nQnVpbGRl
ciBkdW1wLGJvb2xlYW4gZW9sLGludCBpbmRlbnQpIHsKCQlpZiAoZW9sKQoJCQlkdW1wLmFwcGVu
ZCgiPGJyLz4iKTsKCQlmb3IgKGludCBpPTA7aTxpbmRlbnQ7KytpKSB7CgkJCWR1bXAuYXBwZW5k
KCImbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsiKTsKCQl9CgkJcmV0dXJuIGR1bXA7Cgl9CglTdHJp
bmdCdWlsZGVyIGFwcGVuZEVvbChTdHJpbmdCdWlsZGVyIGR1bXApIHsKCQlkdW1wLmFwcGVuZCgi
PGJyLz4iKTsKCQlyZXR1cm4gZHVtcDsKCX0KCVN0cmluZyBnZW5Db21lbnRhcmlvKFN0cmluZyBj
bXQpIHsKCQlTdHJpbmdCdWlsZGVyIGR1bXA9bmV3IFN0cmluZ0J1aWxkZXIoKTsKCQlkdW1wLmFw
cGVuZCgiIC8qIDxpIGNsYXNzPSdjb21lbnRhcmlvJz4iKTsKCQlkdW1wLmFwcGVuZChlc2NhcGUo
Y210KSk7CgkJZHVtcC5hcHBlbmQoIjwvaT4gKi8iKTsKCQlyZXR1cm4gZHVtcC50b1N0cmluZygp
OwoJfQoJU3RyaW5nIGdlbkxpdGVyYWwoU3RyaW5nIGNtdCkgewoJCVN0cmluZ0J1aWxkZXIgZHVt
cD1uZXcgU3RyaW5nQnVpbGRlcigpOwoJCWR1bXAuYXBwZW5kKCI8Y29kZT4iKTsKCQlkdW1wLmFw
cGVuZChlc2NhcGUoY210KSk7CgkJZHVtcC5hcHBlbmQoIjwvY29kZT4iKTsKCQlyZXR1cm4gZHVt
cC50b1N0cmluZygpOwoJfQoJU3RyaW5nIGdlbkRpc2FibGVkU3RhcnQoKSB7CgkJcmV0dXJuICI8
c3BhbiBjbGFzcz0nZGlzYWJsZWQnPiI7Cgl9CglTdHJpbmcgZ2VuRGlzYWJsZWRFbmQoKSB7CgkJ
cmV0dXJuICI8L3NwYW4+IjsKCX0KCVN0cmluZyBnZW5Gb2xkZXJTdGFydCgpIHsKCQlyZXR1cm4g
IjxoMj4iOwoJfQoJU3RyaW5nIGdlbkZvbGRlckVuZCgpIHsKCQlyZXR1cm4gIjwvaDI+IjsKCX0K
CVN0cmluZyBnZW5TZXJ2aWNlU3RhcnQoKSB7CgkJcmV0dXJuICI8aDM+IjsKCX0KCVN0cmluZyBn
ZW5TZXJ2aWNlRW5kKCkgewoJCXJldHVybiAiPC9oMz4iOwoJfQoJU3RyaW5nIGdlblNlcnZpY2VT
dWJIZWFkZXJTdGFydCgpIHsKCQlyZXR1cm4gIjxoND4iOwoJfQoJU3RyaW5nIGdlblNlcnZpY2VT
dWJIZWFkZXJFbmQoKSB7CgkJcmV0dXJuICI8L2g0PiI7Cgl9Cn0gLy8gY2xhc3MgRHVtcEZvcm1h
dEhUTUwKCnN0YXRpYyBjbGFzcyBEb2NNYXBHZW4gewoJCglib29sZWFuIGFsZ3VuTWFwTm9Ucml2
aWFsOwoJCglGbG93RWxlbWVudCBnZW5NYXAoTlNSZWNvcmQgaW5wdXQsIE5TUmVjb3JkIG91dHB1
dCkgewoJCXJldHVybiBnZW5NYXAobnVsbCxudWxsLGlucHV0LG51bGwsb3V0cHV0KTsKCX0KCUZs
b3dFbGVtZW50IGdlbk1hcChGbG93TWFwIG1hcCxTdHJpbmcgaW5wdXRQYXJlbnQsIE5TUmVjb3Jk
IGlucHV0LCBTdHJpbmcgb3V0cHV0UGFyZW50LCBOU1JlY29yZCBvdXRwdXQpIHsKCQkvKiBHZW5l
cmFyZW1vcyB1biBtYXAgcG9yIGNhZGEgZmllbGQgKi8KCQlpZiAobWFwPT1udWxsKSB7CgkJCW1h
cD1jcmVhdGVGbG93TWFwKCk7CgkJfQoJCWFsZ3VuTWFwTm9Ucml2aWFsPWZhbHNlOwoJCWZvciAo
TlNGaWVsZCBmaWVsZDppbnB1dC5nZXRBY3R1YWxGaWVsZHMoKSkgewoJCQlTdHJpbmcgZmllbGRO
YW1lPWZpZWxkLmdldE5hbWUoKTsKCQkJaWYgKGlucHV0UGFyZW50IT1udWxsKQoJCQkJZmllbGRO
YW1lPWlucHV0UGFyZW50KyIvIitmaWVsZE5hbWU7CgkJCWlmICghKGZpZWxkIGluc3RhbmNlb2Yg
TlNSZWNvcmQpKSB7CgkJCQlGbG93TWFwQ29weSBtYz1jcmVhdGVGbG93TWFwQ29weSgpOwoJCQkJ
bWMuc2V0TWFwRnJvbShmaWVsZE5hbWUpOwoJCQkJbWMuc2V0TWFwVG8oIlRPRE8gIitmaWVsZE5h
bWUpOwovLwlTeXN0ZW0ub3V0LnByaW50bG4oIkFudGVzIGRlIGHDsWFkaXIgbWFwQ29weSAsIG1h
cD0iK21hcC5oYXNoQ29kZSgpKyIsIG1hcC5jaGlsZHJlbiM9IittYXAuZ2V0Tm9kZUNvdW50KCkp
OwoJCQkJbWFwLmFkZE5vZGUobWMpOwovLwlTeXN0ZW0ub3V0LnByaW50bG4oIkHDsWFkaWRvIG1h
cENvcHkgIituZXcgRmxvd0R1bXBlcigpLmR1bXAobWMpKyIsIG1hcD0iK21hcC5oYXNoQ29kZSgp
KyIsIG1hcC5jaGlsZHJlbiM9IittYXAuZ2V0Tm9kZUNvdW50KCkpOwoJCQl9CgkJCWVsc2UKCQkJ
CWdlbk1hcChtYXAsZmllbGROYW1lLChOU1JlY29yZClmaWVsZCwiVE9ETyIsbnVsbCk7CgkJfQoJ
CXJldHVybiBtYXA7Cgl9CgkJCglGbG93TWFwIGNyZWF0ZUZsb3dNYXAoKSB7CgkJcmV0dXJuIG5l
dyBGbG93TWFwKG51bGwpOwoJfQoJRmxvd01hcENvcHkgY3JlYXRlRmxvd01hcENvcHkoKSB7CgkJ
cmV0dXJuIG5ldyBGbG93TWFwQ29weShudWxsKTsKCX0KCQp9IC8vIGNsYXNzIERvY01hcEdlbgoK
c3RhdGljIHZvaWQgbG9nKFN0cmluZyBtc2cpIHsKCgl0cnkgewoJCS8vIGlucHV0CgkJSURhdGEg
aW5wdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJSURhdGFDdXJzb3IgaW5wdXRDdXJzb3Ig
PSBpbnB1dC5nZXRDdXJzb3IoKTsKCQlJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNvciwgIm1lc3Nh
Z2UiLCBtc2cpOwoJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAiZnVuY3Rpb24iLCAiZHVt
cFNlcnZpY2VzIiApOwoJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAibGV2ZWwiLCAiSU5G
TyIgKTsKCQlpbnB1dEN1cnNvci5kZXN0cm95KCk7CgoJCVNlcnZpY2UuZG9JbnZva2UoICJwdWIu
ZmxvdyIsICJkZWJ1Z0xvZyIsIGlucHV0ICk7Cgl9CgljYXRjaCggRXhjZXB0aW9uIGUpewoJCWUu
cHJpbnRTdGFja1RyYWNlKCk7Cgl9CgkKfQoKCQ==</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>com.wm.lang.ns.Namespace</value>
    <value>com.wm.lang.ns.NSNode</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>com.wm.lang.ns.NSService</value>
    <value>com.wm.app.b2b.server.FlowSvcImpl</value>
    <value>com.wm.lang.ns.NSRecord</value>
    <value>com.wm.lang.ns.NSRecordRef</value>
    <value>com.wm.lang.schema.ContentType</value>
    <value>com.wm.lang.ns.NSField</value>
    <value>com.wm.lang.ns.NSSignature</value>
    <value>com.wm.lang.ns.NSInterface</value>
    <value>com.wm.lang.flow.FlowRoot</value>
    <value>com.wm.lang.flow.FlowElement</value>
    <value>com.wm.lang.flow.FlowMapCopy</value>
    <value>com.wm.lang.flow.FlowMapInvoke</value>
    <value>com.wm.lang.flow.FlowMap</value>
    <value>com.wm.lang.flow.FlowMapDelete</value>
    <value>com.wm.lang.flow.FlowMapSet</value>
    <value>com.wm.lang.flow.MapWmPathInfo</value>
    <value>com.wm.lang.flow.FlowInvoke</value>
    <value>com.wm.lang.flow.FlowSequence</value>
    <value>com.wm.lang.flow.FlowBranch</value>
    <value>com.wm.lang.flow.FlowExit</value>
  </array>
</Values>
